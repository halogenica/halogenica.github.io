<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Halogenica</title>
    <link>https://halogenica.net/tags/tools/</link>
    <description>Recent content in Tools on Halogenica</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>michael.robert.romero@gmail.com (Michael Romero)</managingEditor>
    <webMaster>michael.robert.romero@gmail.com (Michael Romero)</webMaster>
    <lastBuildDate>Wed, 14 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://halogenica.net/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fez Viewer</title>
      <link>https://halogenica.net/tools/fez-viewer/</link>
      <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
      <author>michael.robert.romero@gmail.com (Michael Romero)</author>
      <guid>https://halogenica.net/tools/fez-viewer/</guid>
      <description>&lt;p&gt;Fez Viewer is a tool that can load the models and levels from Fez, and allow you to freely inspect and fly through them. It currently supports loading individual art objects, animation sets, and even entire levels.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scriptable Asset Loading</title>
      <link>https://halogenica.net/software/scriptable-asset-loading/</link>
      <pubDate>Mon, 11 Jul 2011 00:00:00 +0000</pubDate>
      <author>michael.robert.romero@gmail.com (Michael Romero)</author>
      <guid>https://halogenica.net/software/scriptable-asset-loading/</guid>
      <description>&lt;p&gt;In the last few months, I&amp;rsquo;ve been spending a considerable amount of time fleshing out some tedious but necessary parts of my game. I realized that since I&amp;rsquo;m a one-man army, I need the ability to very quickly get all of my ideas out and into a playable form without a lot of process and layers of tools. Unfortunately, the only way to achieve a very seamless workflow is by specializing your tools, which means rolling my own level editor and game formats. These things are nice to have anyway, but I believe that the time I invest in these tools will pay off in even the very first game I make with them. I decided I needed a quick and easy way to import models and other game assets, a scripting language (I chose Lua) for data definition and eventually scripted events and possibly game rules, and a level editor that allows rapid building and playtesting of open 3D worlds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CUDA Design Rule Checking</title>
      <link>https://halogenica.net/tools/cuda-design-rule-checking/</link>
      <pubDate>Wed, 15 Dec 2010 00:00:00 +0000</pubDate>
      <author>michael.robert.romero@gmail.com (Michael Romero)</author>
      <guid>https://halogenica.net/tools/cuda-design-rule-checking/</guid>
      <description>&lt;p&gt;Design Rule Checking (DRC) of semiconductor layouts is a massively independently parallel problem, and well suited for CUDA. As part of an Independent Study, my friend Jeremy Espenshade and I implemented DRC algorithms using CUDA and achieved approximately 25-30x speedup of the checking algorithm on a Tesla card from 2009.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>